<?xml version="1.0"?>
<opml version="2.0">
	<head>
		<title>Roady</title>
		<dateCreated>Mon, 03 Jan 2022 08:12:02 GMT</dateCreated>
		<rd-repository>Roady</rd-repository>
		<rd-path>Roady.opml</rd-path>
		<rd-type>opml</rd-type>
		<ownerTwitterScreenName>PostMonsterG</ownerTwitterScreenName>
		<ownerName>Gary Teter</ownerName>
		<ownerId>http://twitter.com/PostMonsterG</ownerId>
		<urlUpdateSocket>ws://drummer.scripting.com:1232/</urlUpdateSocket>
		<dateModified>Tue, 04 Jan 2022 20:02:15 GMT</dateModified>
		<expansionState></expansionState>
		<lastCursor>0</lastCursor>
		</head>
	<body>
		<outline text="ðŸŽ’" created="Sat, 01 Jan 2022 19:17:05 GMT" flSubMenu="true" isComment="false">
			<outline text="This file contains a menu of commands for working with GitHub within Drummer." created="Sun, 02 Jan 2022 00:23:42 GMT" isComment="true"/>
			<outline text="https://github.com/PostMonsterG/Roady" created="Mon, 03 Jan 2022 08:14:20 GMT" isComment="true"/>
			<outline text="About Roadyâ€¦" created="Thu, 09 Dec 2021 06:44:28 GMT" isComment="false">
				<outline text="const version = &quot;ðŸŽ’ Roady â€” Tools for working with GitHub. Version 0.1.1&quot; " created="Fri, 29 Oct 2021 00:33:04 GMT"/>
				<outline text="dialog.alert( version )" created="Fri, 10 Dec 2021 03:04:11 GMT"/>
				<outline text="console.log( version )" created="Fri, 10 Dec 2021 03:05:13 GMT"/>
				</outline>
			<outline text="-" created="Sun, 02 Jan 2022 03:30:18 GMT"/>
			<outline text="Back Up Now" created="Wed, 08 Dec 2021 19:46:16 GMT" isComment="false">
				<outline text="Roady will back up your Drummer files which have changed since the last backup." created="Fri, 31 Dec 2021 03:05:31 GMT" isComment="true"/>
				<outline text="You can copy this menu item into Drummer's scheduler to enable continuous, automatic backups." created="Mon, 03 Jan 2022 07:59:01 GMT" isComment="true"/>
				<outline text="&lt;i&gt;Reads from localStorage &lt;/i&gt;" created="Thu, 09 Dec 2021 17:37:10 GMT" isComment="true">
					<outline text="rd-backups-last" created="Fri, 31 Dec 2021 08:51:07 GMT"/>
					<outline text="rd-backups-repository" created="Fri, 10 Dec 2021 06:27:12 GMT"/>
					<outline text="rd-backups-path" created="Fri, 10 Dec 2021 06:27:17 GMT"/>
					<outline text="rd-username" created="Tue, 21 Dec 2021 00:45:24 GMT" isComment="false"/>
					</outline>
				<outline text="//  &lt;i&gt;Here is the code&lt;/i&gt;" created="Tue, 23 Nov 2021 15:51:55 GMT">
					<outline text="const username      = localStorage.getItem( &quot;rd-username&quot; )" created="Fri, 24 Dec 2021 20:33:28 GMT"/>
					<outline text="const repository     = localStorage.getItem( &quot;rd-backups-repository&quot; )" created="Fri, 24 Dec 2021 20:29:46 GMT"/>
					<outline text="const last                  = localStorage.getItem( &quot;rd-backups-last&quot; )" created="Fri, 31 Dec 2021 08:59:44 GMT"/>
					<outline text="const lastbackup    = last !== null ? new Date( last ) : null" created="Fri, 31 Dec 2021 09:09:26 GMT"/>
					<outline text="const thisbackup    = new Date()" created="Tue, 04 Jan 2022 19:17:09 GMT"/>
					<outline text="localStorage.setItem( &quot;rd-backups-last&quot;, thisbackup )" created="Fri, 31 Dec 2021 05:27:01 GMT"/>
					<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” Starting backup at &quot; + thisbackup + &quot; â€” Last backup was &quot; + last )" created="Fri, 31 Dec 2021 11:04:11 GMT" isComment="false"/>
					<outline text="" created="Tue, 04 Jan 2022 06:51:11 GMT"/>
					<outline text="var basepath  = localStorage.getItem( &quot;rd-backups-path&quot; )" created="Fri, 24 Dec 2021 20:33:03 GMT"/>
					<outline text="" created="Fri, 24 Dec 2021 20:41:04 GMT"/>
					<outline text="if ( username === null ) {" created="Tue, 04 Jan 2022 06:14:36 GMT">
						<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” Unable to find rd-username. You can fix this with ðŸŽ’ Preferences â†’ Configure GitHub Usernameâ€¦&quot;  )" created="Fri, 24 Dec 2021 20:42:14 GMT"/>
						</outline>
					<outline text="} else if ( repository === null ) {" created="Tue, 04 Jan 2022 06:17:07 GMT">
						<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” Unable to find rd-backups-repository. You can fix this with ðŸŽ’ Preferences â†’ Configure Backups Repositoryâ€¦&quot;  )" created="Fri, 24 Dec 2021 20:42:14 GMT"/>
						</outline>
					<outline text="} else if ( basepath === null ) {" created="Tue, 04 Jan 2022 06:17:07 GMT">
						<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” Unable to find rd-backups-path. You can fix this with ðŸŽ’ Preferences â†’ Configure Backups Pathâ€¦&quot;  )" created="Fri, 24 Dec 2021 20:42:14 GMT"/>
						</outline>
					<outline text="} else {" created="Fri, 24 Dec 2021 20:42:15 GMT">
						<outline text="basepath = string.trimLeading( basepath, &quot;/&quot; )" created="Fri, 31 Dec 2021 03:36:39 GMT"/>
						<outline text="basepath = string.trimTrailing( basepath, &quot;/&quot; )" created="Fri, 31 Dec 2021 03:38:12 GMT"/>
						<outline text="var uploaded = 0" created="Fri, 31 Dec 2021 09:12:20 GMT"/>
						<outline text="const message =  string.randomSnarkySlogan()" created="Fri, 24 Dec 2021 20:45:56 GMT"/>
						<outline text="const hierarchy = file.getFileHierarchy()" created="Fri, 31 Dec 2021 03:23:29 GMT"/>
						<outline text="" created="Tue, 04 Jan 2022 19:16:22 GMT"/>
						<outline text="for ( const group of [ &quot;privateFiles&quot;, &quot;publicFiles&quot; ] ) {" created="Fri, 31 Dec 2021 04:16:35 GMT">
							<outline text="for ( const filename in hierarchy[ group ].subs ) {" created="Wed, 22 Dec 2021 19:51:40 GMT">
								<outline text="" created="Tue, 04 Jan 2022 19:25:42 GMT"/>
								<outline text="let shouldupload = false" created="Tue, 04 Jan 2022 19:01:20 GMT"/>
								<outline text="const path                 = basepath + &quot;/&quot; + group + &quot;/&quot; + filename" created="Fri, 31 Dec 2021 03:35:09 GMT"/>
								<outline text="const info                  = hierarchy[ group ].subs[ filename ]" created="Tue, 04 Jan 2022 06:22:14 GMT"/>
								<outline text="const lastmodified = new Date( info[ &quot;whenModified&quot; ] )" created="Tue, 04 Jan 2022 18:11:14 GMT"/>
								<outline text="const whencreated = new Date( info[ &quot;whenCreated&quot; ] )" created="Tue, 04 Jan 2022 18:12:17 GMT"/>
								<outline text="let data = null" created="Fri, 31 Dec 2021 10:31:47 GMT"/>
								<outline text="" created="Tue, 04 Jan 2022 19:13:28 GMT"/>
								<outline text="if ( lastbackup === null ||  lastmodified  &gt;= lastbackup ) {" created="Fri, 31 Dec 2021 08:55:04 GMT">
									<outline text="shouldupload = true" created="Tue, 04 Jan 2022 19:25:15 GMT"/>
									<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” &quot; + filename + &quot;  was modified &quot; +  lastmodified + &quot; after the last backup at &quot; + lastbackup )" created="Fri, 31 Dec 2021 11:04:11 GMT" isComment="false"/>
									<outline text="" created="Tue, 04 Jan 2022 19:25:38 GMT"/>
									<outline text="const existing = github.download( username, repository, path )" created="Fri, 31 Dec 2021 05:18:56 GMT" isComment="true"/>
									<outline text="const current = base64.decode( existing.content )" created="Fri, 31 Dec 2021 05:04:16 GMT" isComment="true"/>
									<outline text="data = file.readWholeFile( filename )" created="Fri, 31 Dec 2021 03:40:15 GMT" isComment="true"/>
									<outline text="shouldupload = data !== current" created="Fri, 31 Dec 2021 09:58:12 GMT" isComment="true"/>
									<outline text="" created="Tue, 04 Jan 2022 19:25:39 GMT"/>
									</outline>
								<outline text="} else if ( lastbackup !== null &amp;&amp; whencreated &gt; lastbackup  ) {" created="Fri, 31 Dec 2021 09:57:28 GMT">
									<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” &quot; + filename + &quot;  was created &quot; +  whencreated + &quot; after the last backup at &quot; + lastbackup )" created="Fri, 31 Dec 2021 11:04:11 GMT" isComment="false"/>
									<outline text="shouldupload = true" created="Fri, 31 Dec 2021 10:01:12 GMT"/>
									<outline text="}" created="Fri, 31 Dec 2021 09:05:29 GMT"/>
									</outline>
								<outline text="" created="Tue, 04 Jan 2022 19:16:27 GMT"/>
								<outline text="if ( shouldupload ) {" created="Fri, 31 Dec 2021 10:01:35 GMT">
									<outline text="if ( data == null ) {  data = file.readWholeFile( filename )  }" created="Fri, 31 Dec 2021 10:32:04 GMT"/>
									<outline text="const result = github.upload ( username, repository, path, data, message )" created="Fri, 24 Dec 2021 20:32:48 GMT" isComment="false"/>
									<outline text="const status = result[ &quot;statusCode&quot; ]" created="Fri, 31 Dec 2021 03:13:09 GMT"/>
									<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” Result from uploading &quot; + filename + &quot;  is &quot; + JSON.stringify( result ) )" created="Fri, 31 Dec 2021 11:04:11 GMT" isComment="true"/>
									<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” Status from uploading &quot; + filename + &quot;  to &quot; + repository + &quot; at &quot; + path + &quot; is &quot; + status )" created="Fri, 31 Dec 2021 11:04:11 GMT" isComment="false"/>
									<outline text="uploaded = uploaded + 1" created="Fri, 31 Dec 2021 09:12:39 GMT"/>
									<outline text="}" created="Fri, 31 Dec 2021 10:01:47 GMT"/>
									</outline>
								<outline text="}" created="Tue, 04 Jan 2022 19:20:56 GMT"/>
								</outline>
							<outline text="}" created="Fri, 31 Dec 2021 10:38:43 GMT"/>
							</outline>
						<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Back Up Now â€” Completed backup which began at &quot; + thisbackup + &quot; and uploaded &quot; + uploaded + &quot; files&quot; )" created="Fri, 31 Dec 2021 03:10:32 GMT"/>
						<outline text="}" created="Fri, 24 Dec 2021 20:34:25 GMT"/>
						</outline>
					</outline>
				</outline>
			<outline text="-" created="Sun, 02 Jan 2022 04:28:51 GMT"/>
			<outline text="Upload Current Tabâ€¦" created="Wed, 08 Dec 2021 19:46:16 GMT" isComment="false">
				<outline text="Roady will upload the currently open tab to GitHub." created="Fri, 31 Dec 2021 03:05:31 GMT" isComment="true"/>
				<outline text="Roady looks for header elements in the OPML to determine where to save the file and how it is processed. " created="Thu, 09 Dec 2021 17:37:10 GMT" isComment="true">
					<outline text="&lt;i&gt;rd-repository&lt;/i&gt;" created="Fri, 10 Dec 2021 06:27:12 GMT">
						<outline text="Set this to the name of the GitHub repository you want to save the file into." created="Fri, 10 Dec 2021 06:27:39 GMT"/>
						<outline text="For example, &quot;hello-world&quot;" created="Fri, 10 Dec 2021 06:32:41 GMT"/>
						</outline>
					<outline text="&lt;i&gt;rd-path&lt;/i&gt;" created="Fri, 10 Dec 2021 06:27:17 GMT">
						<outline text="Set this to the path to the file, including the filename  " created="Fri, 10 Dec 2021 06:28:14 GMT"/>
						<outline text="For example, &quot;directory/sub/file.opml&quot;" created="Fri, 10 Dec 2021 06:30:36 GMT"/>
						</outline>
					<outline text="&lt;i&gt;rd-type&lt;/i&gt;" created="Tue, 21 Dec 2021 00:45:24 GMT" isComment="false">
						<outline text="Controls how the file is processed before uploading" created="Fri, 24 Dec 2021 18:30:02 GMT"/>
						<outline text="&lt;i&gt;opml&lt;/i&gt;" created="Mon, 20 Dec 2021 23:55:36 GMT">
							<outline text="The OPML file will be uploaded without processing" created="Mon, 20 Dec 2021 23:58:05 GMT"/>
							</outline>
						<outline text="&lt;i&gt;text&lt;/i&gt;" created="Mon, 20 Dec 2021 23:54:32 GMT">
							<outline text="Suitable for Markdown, the text from the nodes of the outline will be included, but none of the indentation or OPML attributes" created="Mon, 20 Dec 2021 23:56:55 GMT"/>
							</outline>
						<outline text="&lt;i&gt;indented&lt;/i&gt;" created="Mon, 20 Dec 2021 23:57:34 GMT">
							<outline text="Suitable for JavaScript, the text from the nodes of the outline will be included, with indentation per OPML indentation level" created="Mon, 20 Dec 2021 23:57:42 GMT"/>
							</outline>
						</outline>
					</outline>
				<outline text="//  &lt;i&gt;Here is the code&lt;/i&gt;" created="Tue, 23 Nov 2021 15:51:55 GMT">
					<outline text="" created="Sat, 04 Dec 2021 09:04:53 GMT"/>
					<outline text="const username      = localStorage.getItem( &quot;rd-username&quot; )" created="Fri, 24 Dec 2021 20:33:28 GMT"/>
					<outline text="const headers          = opml.getHeaders()" created="Fri, 24 Dec 2021 20:31:22 GMT"/>
					<outline text="const repository     = headers[ &quot;rd-repository&quot; ]" created="Fri, 24 Dec 2021 20:29:46 GMT"/>
					<outline text="const path                = headers[ &quot;rd-path&quot; ]" created="Fri, 24 Dec 2021 20:33:03 GMT"/>
					<outline text="const type                = headers[ &quot;rd-type&quot; ]" created="Fri, 24 Dec 2021 20:34:25 GMT"/>
					<outline text="" created="Fri, 24 Dec 2021 20:41:04 GMT"/>
					<outline text="" created="Tue, 04 Jan 2022 06:23:28 GMT"/>
					<outline text="if ( username === null) {" created="Tue, 04 Jan 2022 06:14:36 GMT">
						<outline text="dialog.alert( &quot;ðŸŽ’ Didn't upload tab because Roady couldn't find your GitHub username. You can fix this with ðŸŽ’ Preferences â†’ Configure GitHub Usernameâ€¦&quot;  )" created="Fri, 24 Dec 2021 20:42:14 GMT"/>
						</outline>
					<outline text="} else if ( repository === undefined ) {" created="Tue, 04 Jan 2022 06:17:07 GMT">
						<outline text="dialog.alert( &quot;ðŸŽ’ Didn't upload tab because Roady couldn't find the rd-repository header element. You can fix this with File â†’ Edit OPML headers... &quot;  )" created="Fri, 24 Dec 2021 20:42:14 GMT"/>
						</outline>
					<outline text="} else if ( path === undefined ) {" created="Tue, 04 Jan 2022 06:17:07 GMT">
						<outline text="dialog.alert( &quot;ðŸŽ’ Didn't upload tab because Roady couldn't find the rd-path header element. You can fix this with File â†’ Edit OPML headers...&quot;  )" created="Fri, 24 Dec 2021 20:42:14 GMT"/>
						</outline>
					<outline text="} else if ( type === undefined ) {" created="Tue, 04 Jan 2022 06:17:07 GMT">
						<outline text="dialog.alert( &quot;ðŸŽ’ Didn't upload tab because Roady couldn't find the rd-type header element. You can fix this with File â†’ Edit OPML headers...&quot;  )" created="Fri, 24 Dec 2021 20:42:14 GMT"/>
						</outline>
					<outline text="} else {" created="Fri, 24 Dec 2021 20:42:15 GMT">
						<outline text="var data" created="Fri, 24 Dec 2021 20:45:27 GMT"/>
						<outline text="if ( type === &quot;opml&quot; ) {" created="Fri, 24 Dec 2021 20:47:46 GMT">
							<outline text="data = opml.getCurrentOpml()" created="Fri, 24 Dec 2021 20:48:22 GMT"/>
							</outline>
						<outline text="} else if ( type === &quot;text&quot; ) {" created="Fri, 24 Dec 2021 20:48:33 GMT">
							<outline text="data = getOutlineText( )" created="Fri, 24 Dec 2021 22:29:46 GMT"/>
							</outline>
						<outline text="} else if ( type === &quot;indented&quot; ) {" created="Fri, 24 Dec 2021 20:48:49 GMT">
							<outline text="data = getOutlineText( &quot;\t&quot; )" created="Fri, 24 Dec 2021 22:29:46 GMT"/>
							<outline text="}" created="Fri, 24 Dec 2021 20:49:30 GMT"/>
							</outline>
						<outline text="if ( data === undefined ) {" created="Fri, 24 Dec 2021 20:49:34 GMT">
							<outline text="dialog.alert( &quot;ðŸŽ’ Didn't upload tab because the rd-type element must be opml, text or indented. Fix this with File â†’ Edit OPML headers...&quot; )" created="Fri, 24 Dec 2021 20:49:49 GMT"/>
							</outline>
						<outline text="} else {" created="Fri, 24 Dec 2021 21:38:00 GMT">
							<outline text="const message =  string.randomSnarkySlogan()" created="Fri, 24 Dec 2021 20:45:56 GMT"/>
							<outline text="const result = github.upload ( username, repository, path, data, message )" created="Fri, 24 Dec 2021 20:32:48 GMT" isComment="false"/>
							<outline text="const status = result[ &quot;statusCode&quot; ]" created="Fri, 31 Dec 2021 03:13:09 GMT"/>
							<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Upload Current Tab â€” Result from uploading &quot; + filename + &quot;  to &quot; + repository + &quot; at &quot; + path + &quot; is &quot; + JSON.stringify( result )  )" created="Fri, 31 Dec 2021 11:04:11 GMT" isComment="true"/>
							<outline text="console.log( &quot;ðŸŽ’ 0.1.1 â€” Upload Current Tab â€” Status from uploading &quot; + filename + &quot;  to &quot; + repository + &quot; at &quot; + path + &quot; is &quot; + status )" created="Fri, 31 Dec 2021 11:04:11 GMT" isComment="false"/>
							<outline text="dialog.alert( &quot;ðŸŽ’ Status from uploading tab to GitHub: &quot; + status )" created="Fri, 31 Dec 2021 03:10:32 GMT"/>
							<outline text="}" created="Fri, 24 Dec 2021 20:49:50 GMT"/>
							</outline>
						<outline text="}" created="Fri, 24 Dec 2021 21:36:25 GMT"/>
						</outline>
					<outline text="" created="Fri, 24 Dec 2021 20:34:25 GMT"/>
					<outline text="//    &lt;b&gt;Functions&lt;/b&gt;" created="Fri, 24 Dec 2021 22:02:50 GMT">
						<outline text="//   &lt;b&gt;Get text of outline&lt;/b&gt;" created="Fri, 24 Dec 2021 22:03:00 GMT">
							<outline text="function getOutlineText( indent ) {" created="Fri, 24 Dec 2021 22:03:25 GMT">
								<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Thu, 25 Nov 2021 17:40:49 GMT" isComment="true">
									<outline text="Gets the text of the current outline, optionally with indents " created="Thu, 25 Nov 2021 17:41:51 GMT" isComment="true"/>
									<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Thu, 25 Nov 2021 17:37:41 GMT" isComment="true">
										<outline text="&lt;b&gt;indent&lt;/b&gt; if provided, this string will be repeated for each level of indentation" created="Thu, 25 Nov 2021 17:38:25 GMT" isComment="false"/>
										</outline>
									<outline text="&lt;i&gt;Input&lt;/i&gt;" created="Sun, 28 Nov 2021 18:10:28 GMT" isComment="true">
										<outline text="The current outline" created="Sun, 28 Nov 2021 18:11:51 GMT" isComment="true"/>
										</outline>
									<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Thu, 25 Nov 2021 17:39:27 GMT" isComment="true">
										<outline text="A string containing the text of the current outline" created="Sun, 28 Nov 2021 18:13:30 GMT"/>
										<outline text="This method will return an empty string rather than undefined" created="Sun, 28 Nov 2021 18:13:18 GMT"/>
										</outline>
									</outline>
								<outline text="var text = &quot;&quot;" created="Fri, 24 Dec 2021 22:27:59 GMT"/>
								<outline text="const cursor = op.getCursor()" created="Wed, 07 Apr 2021 16:53:43 GMT"/>
								<outline text="op.firstSummit()" created="Sun, 21 Nov 2021 22:02:10 GMT"/>
								<outline text="op.visitSubs(  " created="Sun, 21 Nov 2021 20:12:27 GMT" isComment="false">
									<outline text="function( node, level ) {" created="Mon, 22 Nov 2021 01:05:01 GMT" isComment="false">
										<outline text="var spaces = &quot;&quot;" created="Fri, 24 Dec 2021 22:59:12 GMT"/>
										<outline text="if ( indent !== undefined ) {" created="Fri, 24 Dec 2021 22:29:07 GMT" isComment="false">
											<outline text="spaces = string.filledString( indent, level )" created="Fri, 24 Dec 2021 22:57:36 GMT"/>
											<outline text="}" created="Fri, 24 Dec 2021 22:29:18 GMT"/>
											</outline>
										<outline text="const line = node.getLineText()" created="Sun, 21 Nov 2021 23:53:50 GMT"/>
										<outline text="text =  text + spaces + line + &quot;\n&quot;" created="Sun, 21 Nov 2021 23:46:13 GMT"/>
										<outline text="})" created="Sun, 21 Nov 2021 20:14:25 GMT"/>
										</outline>
									</outline>
								<outline text="op.setCursor( cursor )" created="Wed, 07 Apr 2021 16:54:22 GMT"/>
								<outline text="return text" created="Fri, 24 Dec 2021 22:28:44 GMT"/>
								<outline text="}" created="Fri, 24 Dec 2021 22:03:49 GMT"/>
								</outline>
							</outline>
						</outline>
					</outline>
				</outline>
			<outline text="-" created="Sat, 01 Jan 2022 21:03:01 GMT"/>
			<outline text="Status" created="Sun, 02 Jan 2022 03:29:13 GMT" flSubMenu="true">
				<outline text="Connect to GitHubâ€¦" created="Fri, 24 Dec 2021 20:10:43 GMT">
					<outline text="github.connectViaOauth()" created="Fri, 24 Dec 2021 19:08:36 GMT"/>
					</outline>
				<outline text="Disconnect from GitHub" created="Fri, 24 Dec 2021 20:10:43 GMT">
					<outline text="github.disconnect()" created="Fri, 24 Dec 2021 19:08:36 GMT"/>
					</outline>
				</outline>
			<outline text="-" created="Sat, 01 Jan 2022 22:40:31 GMT"/>
			<outline text="Preferences" created="Sat, 01 Jan 2022 22:25:12 GMT" flSubMenu="true">
				<outline text="Configure GitHub Usernameâ€¦" created="Fri, 24 Dec 2021 20:10:43 GMT">
					<outline text="Displays a dialog box where you can view and edit the GitHub username for the repository where Roady will save your backups." created="Fri, 31 Dec 2021 03:05:31 GMT" isComment="true"/>
					<outline text="&lt;i&gt;Reads and writes from localStorage &lt;/i&gt;" created="Thu, 09 Dec 2021 17:37:10 GMT" isComment="true">
						<outline text="rd-username" created="Tue, 21 Dec 2021 00:45:24 GMT" isComment="false"/>
						</outline>
					<outline text="//    &lt;i&gt;Here is the code&lt;/i&gt;" created="Sat, 01 Jan 2022 21:17:53 GMT">
						<outline text="const username = localStorage.getItem(&quot;rd-username&quot;)" created="Fri, 24 Dec 2021 20:23:51 GMT"/>
						<outline text="const  answer = dialog.ask( &quot;ðŸŽ’ GitHub Username&quot;, username, &quot;The username to use when saving or backing up files to GitHub&quot; )" created="Fri, 24 Dec 2021 20:24:41 GMT"/>
						<outline text="if ( answer !== undefined ) {" created="Fri, 24 Dec 2021 20:26:54 GMT">
							<outline text="localStorage.setItem( &quot;rd-username&quot;, answer )" created="Fri, 24 Dec 2021 20:27:21 GMT"/>
							<outline text="}" created="Fri, 24 Dec 2021 20:27:23 GMT"/>
							</outline>
						</outline>
					</outline>
				<outline text="Configure Backups Repositoryâ€¦" created="Fri, 24 Dec 2021 20:10:43 GMT">
					<outline text="Displays a dialog box where you can view and edit the GitHub repository where we will save your backups." created="Fri, 31 Dec 2021 03:05:31 GMT" isComment="true"/>
					<outline text="&lt;i&gt;Important:&lt;/i&gt; Roady cannot tell, and will not warn you, if you upload private files to a public repository." created="Thu, 09 Dec 2021 19:09:01 GMT" isComment="true"/>
					<outline text="&lt;i&gt;Reads and writes from localStorage &lt;/i&gt;" created="Thu, 09 Dec 2021 17:37:10 GMT" isComment="true">
						<outline text="rd-backups-repository" created="Tue, 21 Dec 2021 00:45:24 GMT" isComment="false"/>
						</outline>
					<outline text="//    &lt;i&gt;Here is the code&lt;/i&gt;" created="Sat, 01 Jan 2022 21:18:21 GMT">
						<outline text="const repository = localStorage.getItem(&quot;rd-backups-repository&quot;)" created="Fri, 24 Dec 2021 20:23:51 GMT"/>
						<outline text="const answer = dialog.ask( &quot;ðŸŽ’ GitHub Backups Repository&quot;, repository, &quot;The repository to use for saving backups to GitHub&quot; )" created="Fri, 24 Dec 2021 20:24:41 GMT"/>
						<outline text="if ( answer !== undefined ) {" created="Fri, 24 Dec 2021 20:26:54 GMT">
							<outline text="localStorage.setItem( &quot;rd-backups-repository&quot;, answer )" created="Fri, 24 Dec 2021 20:27:21 GMT"/>
							<outline text="}" created="Fri, 24 Dec 2021 20:27:23 GMT"/>
							</outline>
						</outline>
					</outline>
				<outline text="Configure Backups Pathâ€¦" created="Fri, 24 Dec 2021 20:10:43 GMT">
					<outline text="Displays a dialog box where you can view and edit the directory where Roady will save your backups." created="Fri, 31 Dec 2021 03:05:31 GMT" isComment="true"/>
					<outline text="For example, if you set this to &lt;i&gt;backups/sekrit&lt;/i&gt;, a public file named &lt;i&gt;Blackjack.opml&lt;/i&gt; would be saved to the path &lt;i&gt;backups/sekrit/publicFiles/Blackjack.opml&lt;/i&gt;" created="Fri, 31 Dec 2021 02:38:36 GMT" isComment="true"/>
					<outline text="You can include or omit starting and trailing slashes." created="Fri, 31 Dec 2021 02:40:23 GMT" isComment="true"/>
					<outline text="&lt;i&gt;Reads and writes from localStorage &lt;/i&gt;" created="Thu, 09 Dec 2021 17:37:10 GMT" isComment="true">
						<outline text="rd-backups-path" created="Tue, 21 Dec 2021 00:45:24 GMT" isComment="false"/>
						</outline>
					<outline text="//   &lt;b&gt; &lt;/b&gt;&lt;i&gt;Here is the code&lt;/i&gt;" created="Sat, 01 Jan 2022 21:18:33 GMT">
						<outline text="const path = localStorage.getItem(&quot;rd-backups-path&quot;)" created="Fri, 24 Dec 2021 20:23:51 GMT"/>
						<outline text="const answer = dialog.ask( &quot;ðŸŽ’ GitHub Backups Path&quot;, path, &quot;The path to use when saving backups to GitHub&quot; )" created="Fri, 24 Dec 2021 20:24:41 GMT"/>
						<outline text="if ( answer !== undefined ) {" created="Fri, 24 Dec 2021 20:26:54 GMT">
							<outline text="localStorage.setItem( &quot;rd-backups-path&quot;, answer )" created="Fri, 24 Dec 2021 20:27:21 GMT"/>
							<outline text="}" created="Fri, 24 Dec 2021 20:27:23 GMT"/>
							</outline>
						</outline>
					</outline>
				</outline>
			</outline>
		</body>
	</opml>
